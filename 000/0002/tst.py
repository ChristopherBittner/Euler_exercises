# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

MAXIMUM = 4000000

def fib(val):
    sumOfPrevious = 1
    previous1 = 1
    previous2 = 1

    sumOfAll = 0
    sumOfEven = 0
    for i in range(0, val):
        sumOfAll += sumOfPrevious
        sumOfEven += sumOfPrevious if sumOfPrevious % 2 == 0 else 0
        print(sumOfPrevious)
        if sumOfPrevious > MAXIMUM:
            return sumOfAll, sumOfEven
        sumOfPrevious = previous1 + previous2
        previous1 = previous2
        previous2  = sumOfPrevious
    return sumOfAll, sumOfEven

r1, r1b = fib(10)
t1 = sum([1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ])
print("Function is working: {}.".format("correctly" if r1 == t1 else "incorrectly"))

r2, r2b = fib(32)
print(r2, r2b)
